# Write your code here
head(mpg)
# Write your code here
library(mpg)
# Write your code here
library(ggplot2)
data(mpg)
head(mpg)
nrow(mpg)
ncol(mpg)
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
# Write your code here
ggplot(data = mpg, aes(x= cty, y = hwy)) +
geom_point(mapping = aes(color = class, size = 6)) +
geom_smooth(method = "lm", color = "red")
# Write your code here (method 2)
ggplot(sizeMass, aes(size_log10, mass_log10)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
scale_x_log10() + scale_y_log10()
# Write your code here
x <- c(3.385,0.48,1.35,465,36.33,27.66,14.83,1.04,4.19,0.425,0.101,0.92,1,0.005,0.06,3.5,2,1.7,2547,0.023,187.1,521,0.785,10,3.3,0.2,1.41,529,207,85,0.75,62,6654,3.5,6.8,35,4.05,0.12,0.023,0.01,1.4,250,2.5,55.5,100,52.16,10.55,0.55,60,3.6,4.288,0.28,0.075,0.122,0.048,192,3,160,0.9,1.62,0.104,4.235)
y <- c(44.5,15.5,8.1,423,119.5,115,98.2,5.5,58,6.4,4,5.7,6.6,0.14,1,10.8,12.3,6.3,4603,0.3,419,655,3.5,115,25.6,5,17.5,680,406,325,12.3,1320,5712,3.9,179,56,17,1,0.4,0.25,12.5,490,12.1,175,157,440,179.5,2.4,81,21,39.2,1.9,1.2,3,0.33,180,25,169,2.6,11.4,2.5,50.4)
sizeMass <- data.frame(x,y)
colnames(sizeMass) = c("Size", "Mass")
head(sizeMass)
# Write your code here (method 1)
size_log10 = c(log10((sizeMass$Size)))
sizeMass$size_log10 <- size_log10
sizeMass
mass_log10 = c(log10((sizeMass$Mass)))
sizeMass$mass_log10 <- mass_log10
sizeMass
head(sizeMass)
ggplot(sizeMass, aes(size_log10, mass_log10)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
# Write your code here (method 2)
ggplot(sizeMass, aes(size_log10, mass_log10)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
scale_x_log10() + scale_y_log10()
# Write your code here (method 2)
ggplot(sizeMass, aes(size, mass)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
scale_x_log10() + scale_y_log10()
# Write your code here (method 2)
ggplot(sizeMass, aes(Size, Mass)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE) +
scale_x_log10() + scale_y_log10()
# Write your code here
mpgSubset <- subset(mpg, cty == 15)
mpgSubset
subCompactSubset <- subset(mpgSubset, class == "subcompact")
subCompactSubset
finalSubset <- data.frame(subCompactSubset$manufacturer, subCompactSubset$model)
finalSubset
# Write your code here
subcompact_15 <- subset(mpg, cty == 15)
subcompact_15
subCom <- subset(mpgSubset, class == "subcompact")
subCom
subcom_man_mod <- data.frame(subCom$manufacturer, subCom$model)
subcom_man_mod
# Write your code here
#make custom shapes
shapes <- c(19, 17, 15, 16, 18, 4, 3)
#create new column for custom shapes based on class variable
mpg$shapes <- shapes[match(mpg$class, unique(mpg$class))]
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = shapes))
scale_shape_identity() +
labes(shape= "Class")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = shapes))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class), size = 5) +
scale_shape_manual(values = c(">", "*", "<", "#", "+", "~", "^"))
# Write your code here
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class), size = 4) +
scale_shape_manual(values = c(">", "*", "<", "#", "+", "~", "^"))
#1 random sample, 20 possible outcomes
rbinom(1, 10, 0.05)
rbinom(1, 10, 0.95)
library(ggplot2)
#The sample space is 10. A possible outcome is a ratio of 0-10 fish either being healthy or sick.
#1/20
#19/20 will be healthy
#1 random sample, with a sample size of 10, with a 5 percent probability of being sick
rbinom(1, 10, 0.05)
#1 random sample, with a sample size of 10, with a 95 percent probability of being health
rbinom(1, 10, 0.95)
p_healthy = 19/20
p_healthy
p_diseased = 1/20
p_diseased
x <- 0:10
x
y <- dbinom(x, 10, 1/20)
y
#1 random sample, with a sample size of 10, with a 5 percent probability of being sick
rbinom(1, 10, 0.05)
data(mpg)
